vacuum.ifStatement.useless=Useless if statement.
vacuum.function.emptyBlock=Function block should not be empty.
vacuum.flow.indentErrorFlow=Indent error flow. Remove else block.
vacuum.result.ignored=Result of this expression is ignored.
vacuum.replace.with=Replace with {0}
vacuum.name.convention=Name should be camelCase or PascalCase
vacuum.binary.sameExpression=Binary operators should not have identical expressions
vacuum.statement.sameLine=Multiple statements on same line

vacuum.err.unhandled=Unhandled error
vacuum.err.handle=Handle error

vacuum.test.create=Create Go unit test
vacuum.test.goTo=Go to test
vacuum.test.name=Test name
vacuum.test.create.command=Create Go unit test
vacuum.test.error.exists=Unit test already exists

vacuum.quickfix.replace.itNotEqual=Replace with if {0} != {1}
vacuum.quickfix.replace.negExpr=Replace with {0} = !{1}

vacuum.quickfix.math.pow=Change from math.Pow(x, 2) to x * x
vacuum.quickfix.yoda=Yoda condition
vacuum.slice.uselessLengthCheck=Return of call to len() or cap() will never be negative
vacuum.time.equal=Use Equal() to compare Time instead of ==
vacuum.time.equal.quickfix=Replace with Equal()

vacuum.concurrency.uselessCriticalSection=Useless critical section. Did you mean to defer Unlock() call?
vacuum.concurrency.goRoutines.threadRace=Calling sync.WaitGroup.Add inside goroutine will lead to thread race

vacuum.receiver.genericNames=Don't use "me", "this" or "self" for receiver names

vacuum.golint.notification.title=golint is not installed
vacuum.golint.notification.message=Please check if golint is in GOPATH/bin directory or run <code>go get -u golang.org/x/lint/golint</code> to install it

vacuum.bytes.compare=Use Equal() to compare bytes instead of Compare()
vacuum.bytes.compare.quickfix=Replace with Equal()
vacuum.bytes.compare.quickfix.not=Replace with !Equal()

vacuum.aws.APIGateway.statusCode=Providing StatusCode is a good practice and will help debug API
vacuum.aws.APIGateway.statusCode.quickFix=Add StatusCode